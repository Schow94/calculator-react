{"version":3,"sources":["components/Button.js","components/App.js","components/Input.js","index.js","components/Calculator.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Button","props","a","createElement","className","onClick","handleClick","children","App","state","input","addToInput","val","console","log","_this","setState","cleaner","replace","eval","equals","percent","percentage","toggle","num","handleClear","react__WEBPACK_IMPORTED_MODULE_5___default","style","textAlign","_Input__WEBPACK_IMPORTED_MODULE_7__","this","_Button__WEBPACK_IMPORTED_MODULE_6__","Component","Input","str","checkString","undefined","newStr","toString","length","substring","trim","r","__webpack_exports__","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_components_App__WEBPACK_IMPORTED_MODULE_2__","ReactDOM","render","document","querySelector","Calculator","_Button__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"static/js/main.3b80b873.chunk.js","sourcesContent":["import React from 'react';\n\n// - Output.js - renders a div with our result\nconst Button = props => {\n  return (\n    <div\n      className=\"button output\"\n      onClick={() => {\n        // console.log(props);\n        props.handleClick(props.children);\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport Button from './Button';\nimport Input from './Input';\nimport Calculator from './Calculator';\n\n// App.js - Contains all the calculation logic and state of application\nclass App extends Component {\n  //initial state\n  state = {\n    input: ''\n  };\n\n  //checks if val is a num\n  // checkNum = val => {\n  //   const num = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n  //   const numVal = parseFloat(val);\n  //   // console.log(numVal);\n  //   if (num.includes(numVal)) {\n  //     //if val is a num, returns val\n  //     this.setState({ input: numVal });\n  //   }\n  // };\n\n  // update input - Nothing is going from addToInput to onClick\n  addToInput = val => {\n    console.log('input: ' + this.state.input);\n    console.log('val: ' + val);\n    return this.setState({ input: this.state.input + val });\n  };\n\n  // Sanitizes math operators\n  cleaner = input => {\n    input = this.state.input.replace(/x/g, '*').replace(/รท/g, '/');\n    return this.setState({ input: eval(input) });\n  };\n\n  // Evaluates math after operators are cleaned up\n  equals = (input, cleaner) => {\n    console.log('input is: ' + input);\n    console.log('input from app.js is: ' + input);\n    if (!this.state.input) {\n      return;\n    } else {\n      this.cleaner(input);\n    }\n  };\n\n  percent = () => {\n    const percentage = this.state.input / 100;\n    this.setState({ input: percentage });\n  };\n\n  toggle = () => {\n    const num = this.state.input * -1;\n    this.setState({ input: num });\n  };\n\n  handleClear = () => {\n    this.setState({ input: '' });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 style={{ textAlign: 'center' }}>Calculator App</h1>\n\n        <div className=\"calculator-body\">\n          <Input input={this.state.input} />\n          {/* Trying put all <Buttons /> in a Calculator Component */}\n          {/* <Calculator input={this.state.input} /> */}\n\n          <div className=\"row\">\n            <Button handleClick={this.handleClear}>AC</Button>\n            <Button handleClick={this.toggle}>+/-</Button>\n            <Button handleClick={this.percent}>%</Button>\n            <Button handleClick={this.addToInput}>รท</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button handleClick={this.addToInput}>x</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button handleClick={this.addToInput}>-</Button>\n          </div>\n\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.addToInput}>+</Button>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"zero\">\n              <Button className=\"zero\" handleClick={this.addToInput}>\n                0\n              </Button>\n            </div>\n            <Button handleClick={this.addToInput}>.</Button>\n            <Button handleClick={this.equals}>=</Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\n// Input.js  - Renders all of our buttons and onClick event handlers\n//not sure exactly what onCLick is doing\n// want to update result with whatever I am clicking. almost like a form that updates live.\n//need a this.setState somewhere\n\nconst Input = props => {\n  const checkString = str => {\n    if (typeof string === undefined) {\n      return '';\n    } else if (typeof str === 'string') {\n      return str;\n    } else if (typeof str === 'number') {\n      const newStr = str.toString();\n      if (newStr.length <= 8) {\n        return newStr;\n      }\n      return newStr.substring(0, 10);\n    }\n    return '';\n  };\n\n  // console.log('display type is:  ' + typeof display);\n  // console.log('props.input: ' + props.input);\n\n  const trim = (str, checkString) => {\n    console.log('props.input is a ' + typeof str);\n    console.log('str is ' + str);\n    if (typeof str === undefined) {\n      return '';\n    }\n    if (typeof str === 'string') {\n      return str;\n    } else if (typeof str === 'number') {\n      const newStr = str.toString();\n      if (newStr.length <= 8) {\n        return newStr;\n      }\n      return newStr.substring(0, 10);\n    }\n    return '';\n    // this.checkString(str);\n  };\n\n  return <div className=\"input\">{trim(props.input)}</div>;\n};\n\nexport default Input;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n","import React, { Component } from 'react';\nimport Button from './Button';\n\n// App.js - Contains all the calculation logic and state of application\nconst Calculator = props => {\n  // update input - Nothing is going from addToInput to onClick\n  const addToInput = val => {\n    console.log('input: ' + props.input);\n    console.log('val: ' + val);\n    return this.setState({ input: this.state.input + val });\n  };\n\n  // Sanitizes math operators\n  const cleaner = props => {\n    props.input = props.input.replace(/x/g, '*').replace(/รท/g, '/');\n    return this.setState({ input: eval(props.input) });\n  };\n\n  // Evaluates math after operators are cleaned up\n  const equals = (props, cleaner) => {\n    console.log('input is: ' + props.input);\n    console.log('input from app.js is: ' + props.input);\n    if (!props.input) {\n      return;\n    } else {\n      this.cleaner(props.input);\n    }\n  };\n\n  const percent = () => {\n    const percentage = this.state.input / 100;\n    this.setState({ input: percentage });\n  };\n\n  const toggle = () => {\n    const num = this.state.input * -1;\n    this.setState({ input: num });\n  };\n\n  // Not sure why, but cannot read property 'handleClear of undefined'\n  const handleClear = () => {\n    this.setState({ input: '' });\n  };\n\n  return (\n    <div>\n      <div className=\"calculator-body\">\n        <div className=\"row\">\n          <Button handleClick={this.handleClear}>AC</Button>\n          <Button handleClick={this.toggle}>+/-</Button>\n          <Button handleClick={this.percent}>%</Button>\n          <Button handleClick={this.addToInput}>รท</Button>\n        </div>\n\n        <div className=\"row\">\n          <Button handleClick={this.addToInput}>7</Button>\n          <Button handleClick={this.addToInput}>8</Button>\n          <Button handleClick={this.addToInput}>9</Button>\n          <Button handleClick={this.addToInput}>x</Button>\n        </div>\n\n        <div className=\"row\">\n          <Button handleClick={this.addToInput}>4</Button>\n          <Button handleClick={this.addToInput}>5</Button>\n          <Button handleClick={this.addToInput}>6</Button>\n          <Button handleClick={this.addToInput}>-</Button>\n        </div>\n\n        <div className=\"row\">\n          <Button handleClick={this.addToInput}>1</Button>\n          <Button handleClick={this.addToInput}>2</Button>\n          <Button handleClick={this.addToInput}>3</Button>\n          <Button handleClick={this.addToInput}>+</Button>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"zero\">\n            <Button className=\"zero\" handleClick={this.addToInput}>\n              0\n            </Button>\n          </div>\n          <Button handleClick={this.addToInput}>.</Button>\n          <Button handleClick={this.equals}>=</Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Calculator;\n"],"sourceRoot":""}